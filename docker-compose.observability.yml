version: '3.8'

# OpenTelemetry observability stack for Employment Act Malaysia API
# Includes Jaeger, Prometheus, and Grafana for comprehensive monitoring

services:
  # Employment Act API (from main docker-compose)
  api:
    extends:
      file: docker-compose.production.yml
      service: api
    environment:
      - JAEGER_ENDPOINT=http://jaeger:14268
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - PROMETHEUS_ENABLED=true
      - METRICS_ENABLED=true
      - OTEL_SERVICE_NAME=employment-act-api
      - OTEL_RESOURCE_ATTRIBUTES=service.name=employment-act-api,service.version=1.0.0,deployment.environment=production
    depends_on:
      - jaeger
      - otel-collector
      - prometheus

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: employment-act-otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - jaeger
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: employment-act-jaeger
    restart: unless-stopped
    ports:
      - "14268:14268"  # jaeger.thrift
      - "16686:16686"  # Web UI
      - "14250:14250"  # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger_data:/tmp

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: employment-act-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: employment-act-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
      - jaeger

  # Redis Exporter for cache metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: employment-act-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: employment-act-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

volumes:
  jaeger_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: employment-act-observability